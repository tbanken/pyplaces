[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyplaces"
dynamic = ["version"]
description = 'pyplaces is a Python package meant to streamline the usage of large places datasets, notably Overture Maps and Foursquare Open Places. All of the datasets and past releases can be downloaded to a specific address, place or bounding box. Conventionally, users download the data themselves or use a tool such as DuckDB to download what they need, whereas pyplaces is more integrated, faster, and more precise.'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Ted Banken", email = "tedbanken@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "License :: OSI Approved :: MIT License",
  "Operating System :: Microsoft :: Windows :: Windows 10",
  "Topic :: Scientific/Engineering :: GIS"
]
dependencies = [
"pyarrow>=19.0.1,<20",
"geopandas>=1.0.1,<2",
"shapely>=2.0.7,<3",
"pyproj>=3.7.1,<4",
"osmnx>=2.0.2,<3",
"typing-extensions",
"sentence-transformers"]

[project.urls]
Documentation = "https://github.com/unknown/pyplaces#readme"
Issues = "https://github.com/unknown/pyplaces/issues"
Source = "https://github.com/tbanken/pyplaces"

[tool.hatch.version]
path = "src/pyplaces/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/pyplaces tests}"

[tool.hatch.envs.docs]
dependencies = [
  "sphinx",
  "sphinx-book-theme",
  "sphinx-autodoc-typehints",
  "esbonio",
  "sphinx-autodoc-typehints",
  "nbsphinx",
]

[tool.coverage.run]
source_pkgs = ["pyplaces", "tests"]
branch = true
parallel = true
omit = [
  "src/pyplaces/__about__.py",
]

[tool.coverage.paths]
pyplaces = ["src/pyplaces", "*/pyplaces/src/pyplaces"]
tests = ["tests", "*/pyplaces/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
